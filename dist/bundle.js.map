{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://starter-webpack/./src/javascript/circleGraph.js","webpack://starter-webpack/./src/javascript/constants.js","webpack://starter-webpack/./src/javascript/eventListeners.js","webpack://starter-webpack/./src/javascript/fetchQuiz.js","webpack://starter-webpack/./src/javascript/globals.js","webpack://starter-webpack/./src/javascript/helperFunctions.js","webpack://starter-webpack/./src/javascript/renderQuestion.js","webpack://starter-webpack/./src/javascript/screenNav.js","webpack://starter-webpack/./src/javascript/settings.js","webpack://starter-webpack/./src/javascript/submitQuiz.js","webpack://starter-webpack/./src/sass/style.scss","webpack://starter-webpack/webpack/bootstrap","webpack://starter-webpack/webpack/runtime/define property getters","webpack://starter-webpack/webpack/runtime/hasOwnProperty shorthand","webpack://starter-webpack/webpack/runtime/make namespace object","webpack://starter-webpack/./src/javascript/index.js"],"sourcesContent":["// ------------------------------------------- //\r\n// module imports\r\nimport * as CONSTS from \"./constants\";\r\n// ------------------------------------------- //\r\n\r\n// Circle graph logic\r\nconst getScoreGrade = (progress) => {\r\n    if (progress == 100) return \"S\";\r\n    if (progress >= 90) return \"A\";\r\n    if (progress >= 75) return \"B\";\r\n    if (progress >= 60) return \"C\";\r\n    if (progress >= 50) return \"D\";\r\n    return \"F\";\r\n};\r\n\r\nexport const initCircleGraph = (score) => {\r\n    let currentProgress = -1;\r\n    let progressEndValue = score;\r\n    let speed = 20;\r\n\r\n    let progressInterval = setInterval(() => {\r\n        currentProgress++;\r\n        CONSTS.progressValue.innerText = getScoreGrade(currentProgress);\r\n        CONSTS.graphProgress.style.background = `\r\n            conic-gradient(\r\n                var(--accent) ${currentProgress * 3.6}deg,\r\n                var(--primary) ${currentProgress * 3.6}deg     \r\n            )\r\n        `;\r\n        if (currentProgress == progressEndValue) clearInterval(progressInterval);\r\n    }, speed);\r\n};\r\n","// Screen Elements\r\nexport const startScreen = document.querySelector(\".startscreen\");\r\nexport const questionScreen = document.querySelector(\".question\");\r\nexport const settingsScreen = document.querySelector(\".settings\");\r\nexport const highscores = document.querySelector(\".highscores\");\r\nexport const resultScreen = document.querySelector(\".results\");\r\n\r\nexport const pages = [startScreen, questionScreen, settingsScreen, highscores, resultScreen];\r\n\r\n// Button ELements\r\nexport const startBtn = document.getElementById(\"start-btn\");\r\nexport const quitBtn = document.getElementById(\"quit-btn\");\r\nexport const settingsBtn = document.getElementById(\"settings-btn\");\r\nexport const backBtns = [...document.querySelectorAll(\".back-btn\")];\r\nexport const highscoresBtn = document.getElementById(\"highscores-btn\");\r\n\r\n// Setting Elements\r\nexport const amountOfQuestions = document.getElementById(\"amount-of-questions\");\r\nexport const possibleAnswers = document.getElementById(\"possible-answers\");\r\nexport const tipsAllowed = document.getElementById(\"tips-allowed\");\r\nexport const timelimitActivated = document.getElementById(\"timelimit-activated\");\r\nexport const difficultyBtns = [...document.querySelectorAll(\".settings__difficuly-btn\")];\r\n\r\nexport const tagSearchbar = document.getElementById(\"tag-searchbar\");\r\nexport const tagResults = document.getElementById(\"tag-results\");\r\nexport const selectedTags = document.getElementById(\"selected-tags\");\r\n\r\nexport const tags = [\"Javascript\", \"PHP\", \"Bash\", \"HTML\", \"Linux\"];\r\n\r\nexport const applySettingsBtn = document.getElementById(\"apply-settings\");\r\nexport const resetSettingsBtn = document.getElementById(\"reset-settings\");\r\nexport const settingsError = document.getElementById(\"settings-error\");\r\n\r\n// Submit Screen Elements\r\nexport const submitQuizBtn = document.getElementById(\"submit-quiz-btn\");\r\nexport const questionComparisonList = document.getElementById(\"question-comparison-list\");\r\nexport const resultElements = [...document.querySelectorAll(\".results__infopiece\")];\r\n\r\n// Question Elements\r\nexport const prevPageBtn = document.getElementById(\"prev-page\");\r\nexport const nextPageBtn = document.getElementById(\"next-page\");\r\n\r\nexport const questionPhrase = document.getElementById(\"question\");\r\nexport const answerList = document.getElementById(\"answer-list\");\r\nexport const questionNav = document.getElementById(\"question-nav\");\r\n\r\n// Circle Graph Elements\r\nexport const graphProgress = document.getElementById(\"graph-progress\");\r\nexport const progressValue = document.getElementById(\"progress-value\");\r\n","// ------------------------------------------- //\r\n// module imports\r\nimport * as CONSTS from \"./constants\";\r\nimport * as GLOBALS from \"./globals\";\r\nimport { submitQuiz } from \"./submitQuiz\";\r\nimport { changeScreen } from \"./screenNav\";\r\nimport {\r\n    updateCounter,\r\n    updateToggle,\r\n    updateDifficulty,\r\n    maxAmountOfQuestions,\r\n    maxPossibleAnswers,\r\n    generateQuizSettings,\r\n    resetQuizSettings,\r\n    updateTagResults,\r\n    updateSelectedTags,\r\n    testQuizSettings,\r\n} from \"./settings\";\r\nimport { displayQuestion, highlightSelectedAnswer } from \"./renderQuestion\";\r\n// ------------------------------------------- //\r\n\r\nexport const initEvents = () => {\r\n    // Button actions\r\n    CONSTS.backBtns.map((btn) => {\r\n        btn.addEventListener(\"click\", () => {\r\n            changeScreen(CONSTS.startScreen);\r\n        });\r\n    });\r\n\r\n    CONSTS.settingsBtn.addEventListener(\"click\", () => {\r\n        changeScreen(CONSTS.settingsScreen);\r\n    });\r\n\r\n    CONSTS.highscoresBtn.addEventListener(\"click\", () => {\r\n        changeScreen(CONSTS.highscores);\r\n    });\r\n\r\n    CONSTS.quitBtn.addEventListener(\"click\", () => {\r\n        window.close();\r\n    });\r\n\r\n    // Quiz settings counter buttons\r\n    CONSTS.amountOfQuestions.addEventListener(\"click\", (e) => {\r\n        updateCounter(e, maxAmountOfQuestions);\r\n    });\r\n\r\n    CONSTS.possibleAnswers.addEventListener(\"click\", (e) => {\r\n        updateCounter(e, maxPossibleAnswers);\r\n    });\r\n\r\n    CONSTS.tipsAllowed.addEventListener(\"click\", (e) => {\r\n        updateToggle(e);\r\n    });\r\n\r\n    CONSTS.timelimitActivated.addEventListener(\"click\", (e) => {\r\n        updateToggle(e);\r\n    });\r\n\r\n    // Quiz settings difficulty buttons\r\n    CONSTS.difficultyBtns.map((btn) => {\r\n        btn.addEventListener(\"click\", (e) => {\r\n            updateDifficulty(e);\r\n        });\r\n    });\r\n\r\n    // Quiz settings tag search change events\r\n    CONSTS.tagSearchbar.addEventListener(\"focus\", () => {\r\n        if (updateTagResults()) {\r\n            CONSTS.tagResults.style.display = \"flex\";\r\n        }\r\n    });\r\n\r\n    CONSTS.tagSearchbar.addEventListener(\"input\", () => {\r\n        CONSTS.tagResults.style.display = updateTagResults() ? \"flex\" : \"none\";\r\n    });\r\n\r\n    // Quiz settings control buttons\r\n    CONSTS.applySettingsBtn.addEventListener(\"click\", () => {\r\n        updateSelectedTags();\r\n        GLOBALS.setQuizSettings(generateQuizSettings());\r\n        testQuizSettings();\r\n    });\r\n\r\n    CONSTS.resetSettingsBtn.addEventListener(\"click\", () => {\r\n        resetQuizSettings();\r\n    });\r\n\r\n    // Quiz submit logic\r\n    CONSTS.submitQuizBtn.addEventListener(\"click\", () => {\r\n        submitQuiz(GLOBALS.getAnswerStorage(), GLOBALS.getQuizData());\r\n        changeScreen(CONSTS.resultScreen);\r\n    });\r\n\r\n    // Question pagination logic\r\n    CONSTS.nextPageBtn.addEventListener(\"click\", () => {\r\n        if (GLOBALS.getQuestionIndex() > GLOBALS.getQuizSettings().amountOfQuestions - 1) GLOBALS.setQuestionIndex(0);\r\n        GLOBALS.setQuestionIndex(GLOBALS.getQuestionIndex() + 1);\r\n        displayQuestion(GLOBALS.getQuizData());\r\n        highlightSelectedAnswer(GLOBALS.getQuestionIndex());\r\n    });\r\n\r\n    CONSTS.prevPageBtn.addEventListener(\"click\", () => {\r\n        if (GLOBALS.getQuestionIndex() <= 1) GLOBALS.setQuestionIndex(GLOBALS.getQuizSettings().amountOfQuestions + 1);\r\n        GLOBALS.setQuestionIndex(GLOBALS.getQuestionIndex() - 1);\r\n        displayQuestion(GLOBALS.getQuizData());\r\n        highlightSelectedAnswer(GLOBALS.getQuestionIndex());\r\n    });\r\n};\r\n","// ------------------------------------------- //\r\n// module imports\r\nimport * as GLOBALS from \"./globals\";\r\n// ------------------------------------------- //\r\n\r\n// Fetching data\r\nexport const fetchQuiz = async () => {\r\n    let url = new URL(\"https://quizapi.io/api/v1/questions\");\r\n\r\n    let params = {\r\n        apiKey: \"Yk930yLz3W65YXkbfkG5Cu1E3Aduuk2LqfAsO1k1\",\r\n        limit: GLOBALS.getQuizSettings().amountOfQuestions,\r\n        difficulty: GLOBALS.getQuizSettings().difficulty,\r\n        tags: GLOBALS.getQuizSettings().tags,\r\n    };\r\n\r\n    url.search = new URLSearchParams(params).toString();\r\n\r\n    try {\r\n        let res = await fetch(url);\r\n        if (res.status >= 200 && res.status <= 299) {\r\n            let data = await res.json();\r\n            return data;\r\n        } else {\r\n            throw Error(\"Data fetching error\");\r\n        }\r\n    } catch (error) {\r\n        return undefined;\r\n    }\r\n};\r\n","export const initSessionStorage = () => {\r\n    if (!sessionStorage.getItem(\"quizData\")) {\r\n        sessionStorage.setItem(\"quizData\", []);\r\n    }\r\n    if (!sessionStorage.getItem(\"answerStorage\")) {\r\n        sessionStorage.setItem(\"answerStorage\", []);\r\n    }\r\n    if (!sessionStorage.getItem(\"quizSettings\")) {\r\n        sessionStorage.setItem(\"quizSettings\", {});\r\n    }\r\n    sessionStorage.setItem(\"quizScore\", 0);\r\n    sessionStorage.setItem(\"questionIndex\", 0);\r\n};\r\n\r\n// QuizData get & set\r\nexport const setQuizData = (data) => {\r\n    sessionStorage.setItem(\"quizData\", JSON.stringify(data));\r\n};\r\n\r\nexport const getQuizData = () => {\r\n    return JSON.parse(sessionStorage.getItem(\"quizData\"));\r\n};\r\n\r\n// AnswerStorage get & set\r\nexport const createAnswerStorage = (data) => {\r\n    let answerStorageBase = data.map((answer, index) => {\r\n        return {\r\n            selectedAnswer: -1,\r\n            correctAnswer: -1,\r\n        };\r\n    });\r\n    setAnswerStorage(answerStorageBase);\r\n};\r\n\r\nexport const updateAnswerStorage = (questionIndex, selectedAnswer, correctAnswer) => {\r\n    let answerStorageCurrent = getAnswerStorage();\r\n    answerStorageCurrent[questionIndex - 1] = {\r\n        selectedAnswer: selectedAnswer,\r\n        correctAnswer: correctAnswer,\r\n    };\r\n    setAnswerStorage(answerStorageCurrent);\r\n};\r\n\r\nexport const setAnswerStorage = (data) => {\r\n    sessionStorage.setItem(\"answerStorage\", JSON.stringify(data));\r\n};\r\n\r\nexport const getAnswerStorage = () => {\r\n    return JSON.parse(sessionStorage.getItem(\"answerStorage\"));\r\n};\r\n\r\n// QuizSettings get & set\r\nexport const setQuizSettings = (data) => {\r\n    sessionStorage.setItem(\"quizSettings\", JSON.stringify(data));\r\n};\r\n\r\nexport const getQuizSettings = () => {\r\n    return JSON.parse(sessionStorage.getItem(\"quizSettings\"));\r\n};\r\n\r\n// QuizScore get & set\r\nexport const setQuizScore = (score) => {\r\n    sessionStorage.setItem(\"quizScore\", score);\r\n};\r\n\r\nexport const getQuizScore = () => {\r\n    return Number(sessionStorage.getItem(\"quizScore\"));\r\n};\r\n\r\n// QuestionIndex get & set\r\nexport const setQuestionIndex = (index) => {\r\n    sessionStorage.setItem(\"questionIndex\", index);\r\n};\r\n\r\nexport const getQuestionIndex = () => {\r\n    return Number(sessionStorage.getItem(\"questionIndex\"));\r\n};\r\n","// Compares the indexes of the given answer and the correct answer\r\nexport const compareAnswer = (answerEntry) => {\r\n    if (answerEntry.selectedAnswer !== -1 && answerEntry.correctAnswer !== -1 && answerEntry.selectedAnswer === answerEntry.correctAnswer) {\r\n        return true;\r\n    }\r\n};\r\n\r\n// Limit a string to 60 chars\r\nexport const trimString = (text) => {\r\n    return text.length > 60 ? `${text.substring(0, 60)}...` : text;\r\n};\r\n\r\n// Finds the correct answer by index in the correct-answers object\r\nexport const findCorrectAnswerIndex = (answers) => {\r\n    let correctIndex;\r\n    answers.map((answer, index) => {\r\n        if (answer == \"true\") correctIndex = index;\r\n    });\r\n    return correctIndex;\r\n};\r\n","// ------------------------------------------- //\r\n// module imports\r\nimport * as CONSTS from \"./constants\";\r\nimport * as GLOBALS from \"./globals\";\r\nimport { findCorrectAnswerIndex } from \"./helperFunctions\";\r\n// ------------------------------------------- //\r\n\r\n// Display current question\r\nexport const highlightSelectedAnswer = (questionIndex) => {\r\n    let selectedIndex = GLOBALS.getAnswerStorage()[questionIndex - 1].selectedAnswer;\r\n\r\n    if (selectedIndex == undefined) return;\r\n    [...CONSTS.answerList.children].map((el, index) => {\r\n        if (selectedIndex === index) {\r\n            el.classList.add(\"question__answer--selected\");\r\n        } else {\r\n            el.classList.remove(\"question__answer--selected\");\r\n        }\r\n    });\r\n};\r\n\r\nexport const renderQuestionNavigation = (questions) => {\r\n    CONSTS.questionNav.innerHTML = \"\";\r\n\r\n    questions.map((question, index) => {\r\n        let questionNumberEl = document.createElement(\"li\");\r\n\r\n        if (index === GLOBALS.getQuestionIndex() - 1) questionNumberEl.classList.add(\"question__number--selected\");\r\n        questionNumberEl.classList.add(\"question__number\");\r\n\r\n        questionNumberEl.addEventListener(\"click\", (e) => {\r\n            GLOBALS.setQuestionIndex(Number(e.target.innerText) > 9 ? Number(e.target.innerText) : Number(e.target.innerText.slice(1)));\r\n            displayQuestion(GLOBALS.getQuizData());\r\n            highlightSelectedAnswer(GLOBALS.getQuestionIndex());\r\n        });\r\n\r\n        questionNumberEl.innerText = index >= 9 ? index + 1 : `0${index + 1}`;\r\n        CONSTS.questionNav.appendChild(questionNumberEl);\r\n    });\r\n};\r\n\r\nexport const displayQuestion = (data) => {\r\n    renderQuestionNavigation(data);\r\n\r\n    let currentQuestion = data[GLOBALS.getQuestionIndex() - 1];\r\n\r\n    let currentQuestionAnswers = Object.values(currentQuestion.answers);\r\n    let correctAnswer = findCorrectAnswerIndex(Object.values(currentQuestion.correct_answers));\r\n\r\n    CONSTS.questionPhrase.innerText = currentQuestion.question;\r\n    CONSTS.answerList.innerHTML = \"\";\r\n\r\n    currentQuestionAnswers.map((answer, index) => {\r\n        if (answer !== null) {\r\n            let answerEl = document.createElement(\"li\");\r\n            answerEl.classList.add(\"question__answer\");\r\n            answerEl.innerHTML = `<p>${answer.replace(\"<\", \"&lt;\")}</p>`;\r\n\r\n            CONSTS.answerList.appendChild(answerEl);\r\n\r\n            answerEl.addEventListener(\"click\", () => {\r\n                GLOBALS.updateAnswerStorage(GLOBALS.getQuestionIndex(), index, correctAnswer);\r\n                highlightSelectedAnswer(GLOBALS.getQuestionIndex());\r\n            });\r\n        }\r\n    });\r\n};\r\n","// ------------------------------------------- //\r\n// module imports\r\nimport * as CONSTS from \"./constants\";\r\n// ------------------------------------------- //\r\n\r\n// Screen navigation logic\r\nexport const changeScreen = (destinationScreen) => {\r\n    destinationScreen.classList.remove(\"container--inactive\");\r\n\r\n    CONSTS.pages.map((page) => {\r\n        if (page !== destinationScreen) {\r\n            page.classList.add(\"container--inactive\");\r\n        }\r\n    });\r\n};\r\n","// ------------------------------------------- //\r\n// module imports\r\nimport * as CONSTS from \"./constants\";\r\nimport * as GLOBALS from \"./globals\";\r\nimport { fetchQuiz } from \"./fetchQuiz\";\r\n// ------------------------------------------- //\r\n\r\nexport let maxAmountOfQuestions = 20;\r\nexport let maxPossibleAnswers = 6;\r\nlet difficulty = \"Easy\";\r\nlet selectedTags = \"\";\r\n\r\n// Quiz settings object\r\nexport const generateQuizSettings = () => {\r\n    return {\r\n        amountOfQuestions: Number(CONSTS.amountOfQuestions.children[1].innerText),\r\n        possibleAnswers: Number(CONSTS.possibleAnswers.children[1].innerText),\r\n        tipsOn: CONSTS.tipsAllowed.children[1].innerText === \"Off\" ? false : true,\r\n        timelimitOn: CONSTS.timelimitActivated.children[1].innerText === \"Off\" ? false : true,\r\n        difficulty: difficulty,\r\n        tags: selectedTags,\r\n    };\r\n};\r\n\r\nexport const testQuizSettings = async () => {\r\n    if ((await fetchQuiz()) == undefined) {\r\n        CONSTS.settingsError.style.display = \"initial\";\r\n        CONSTS.selectedTags.innerHTML = \"\";\r\n        resetDifficulty();\r\n        resetQuizSettings();\r\n        GLOBALS.setQuizSettings(generateQuizSettings());\r\n    } else {\r\n        CONSTS.settingsError.style.display = \"none\";\r\n    }\r\n};\r\n\r\nexport const resetQuizSettings = () => {\r\n    CONSTS.amountOfQuestions.children[1].innerText = 10;\r\n    CONSTS.possibleAnswers.children[1].innerText = 4;\r\n    CONSTS.tipsAllowed.children[1].innerText = \"off\";\r\n    CONSTS.timelimitActivated.children[1].innerText = \"off\";\r\n    difficulty = \"Easy\";\r\n    selectedTags = \"\";\r\n};\r\n\r\nexport const checkCounterValue = (currentValue, maxValue) => {\r\n    if (currentValue == maxValue) return currentValue - 1;\r\n    if (currentValue == 1) return currentValue + 1;\r\n    return currentValue;\r\n};\r\n\r\nexport const updateCounter = (event, counterMax) => {\r\n    let settingValue = event.target.parentElement.children[1];\r\n    let settingBtn = event.target;\r\n\r\n    if (settingBtn.getAttribute(\"data-action\") === \"higher\") {\r\n        settingValue.innerText = checkCounterValue(Number(settingValue.innerText), counterMax) + 1;\r\n    }\r\n\r\n    if (settingBtn.getAttribute(\"data-action\") === \"lower\") {\r\n        settingValue.innerText = checkCounterValue(Number(settingValue.innerText), counterMax) - 1;\r\n    }\r\n};\r\n\r\nexport const updateToggle = (event) => {\r\n    let toggleValue = event.target.parentElement.children[1];\r\n\r\n    if (toggleValue.innerText === \"off\") {\r\n        toggleValue.innerText = \"on\";\r\n    } else {\r\n        toggleValue.innerText = \"off\";\r\n    }\r\n};\r\n\r\nexport const updateDifficulty = (event) => {\r\n    let targetBtn = event.target;\r\n    difficulty = targetBtn.innerText;\r\n\r\n    targetBtn.classList.remove(\"btn--secondary\");\r\n    targetBtn.classList.add(\"btn--primary\");\r\n\r\n    CONSTS.difficultyBtns.map((btn) => {\r\n        if (btn.innerText !== targetBtn.innerText) {\r\n            btn.classList.remove(\"btn--primary\");\r\n            btn.classList.add(\"btn--secondary\");\r\n        }\r\n    });\r\n};\r\n\r\nexport const resetDifficulty = () => {\r\n    CONSTS.difficultyBtns.map((btn) => {\r\n        btn.classList.remove(\"btn--primary\");\r\n        btn.classList.add(\"btn--secondary\");\r\n\r\n        if (btn.innerText === \"Easy\") {\r\n            btn.classList.remove(\"btn--secondary\");\r\n            btn.classList.add(\"btn--primary\");\r\n        }\r\n    });\r\n};\r\n\r\nexport const updateTagResults = () => {\r\n    let searchValue = CONSTS.tagSearchbar.value;\r\n    let isResult = false;\r\n\r\n    CONSTS.tagResults.innerHTML = \"\";\r\n\r\n    CONSTS.tags.map((tag) => {\r\n        if (tag.toLowerCase().includes(searchValue.toLowerCase()) && searchValue !== \"\") {\r\n            let tagResultEl = document.createElement(\"div\");\r\n            tagResultEl.classList.add(\"settings__tag-result\");\r\n            tagResultEl.innerHTML = `${tag}`;\r\n\r\n            tagResultEl.addEventListener(\"click\", () => {\r\n                addTag(tag);\r\n            });\r\n\r\n            CONSTS.tagResults.appendChild(tagResultEl);\r\n            isResult = true;\r\n        }\r\n    });\r\n\r\n    return isResult;\r\n};\r\n\r\nexport const addTag = (tag) => {\r\n    CONSTS.tagResults.style.display = \"none\";\r\n    CONSTS.tagSearchbar.value = \"\";\r\n\r\n    let selectedTagEl = document.createElement(\"div\");\r\n    selectedTagEl.classList.add(\"settings__selected-tag\");\r\n    selectedTagEl.innerHTML = `\r\n        <p>${tag}</p>\r\n        <img src=\"./src/images/icons/wrong.svg\" alt=\"delete\" />\r\n    `;\r\n    CONSTS.selectedTags.appendChild(selectedTagEl);\r\n\r\n    updateSelectedTags();\r\n};\r\n\r\nexport const updateSelectedTags = () => {\r\n    let selectedTagsElArray = [...document.querySelectorAll(\".settings__selected-tag\")];\r\n\r\n    selectedTags = selectedTagsElArray.map((tag) => {\r\n        tag.children[1].addEventListener(\"click\", () => {\r\n            CONSTS.selectedTags.removeChild(tag);\r\n            updateSelectedTags();\r\n        });\r\n        return tag.children[0].innerText;\r\n    });\r\n\r\n    if (selectedTags.length === 0) selectedTags = \"\";\r\n};\r\n","// ------------------------------------------- //\r\n// module imports\r\nimport * as CONSTS from \"./constants\";\r\nimport * as GLOBALS from \"./globals\";\r\nimport { initCircleGraph } from \"./circleGraph\";\r\nimport { trimString, compareAnswer, findCorrectAnswerIndex } from \"./helperFunctions\";\r\n// ------------------------------------------- //\r\n\r\nexport const submitQuiz = (answers, questions) => {\r\n    CONSTS.questionComparisonList.innerHTML = \"\";\r\n    GLOBALS.setQuizScore(0);\r\n\r\n    answers.map((answer) => {\r\n        if (compareAnswer(answer)) {\r\n            GLOBALS.setQuizScore(GLOBALS.getQuizScore() + 1);\r\n        }\r\n    });\r\n\r\n    let scoreToPercentage = Math.round((GLOBALS.getQuizScore() / GLOBALS.getQuizSettings().amountOfQuestions) * 100);\r\n\r\n    CONSTS.resultElements.map((el) => {\r\n        let resultType = el.children[0].innerText.slice(0, -1).toLowerCase();\r\n        let resultValue = el.children[1];\r\n\r\n        if (resultType === \"score\") resultValue.innerText = `${scoreToPercentage}%`;\r\n        if (resultType === \"total questions\") resultValue.innerText = GLOBALS.getQuizSettings().amountOfQuestions;\r\n        if (resultType === \"answered correct\") resultValue.innerText = GLOBALS.getQuizScore();\r\n        if (resultType === \"topic\") resultValue.innerText = \"Random\";\r\n        if (resultType === \"difficulty\") resultValue.innerText = GLOBALS.getQuizSettings().difficulty;\r\n        if (resultType === \"final\") resultValue.innerText = scoreToPercentage >= 50 ? \"Pass\" : \"Fail\";\r\n    });\r\n\r\n    initCircleGraph(scoreToPercentage);\r\n\r\n    questions.map((question, index) => {\r\n        let answerCorrect = compareAnswer(answers[index]);\r\n        let questionComparisonEl = document.createElement(\"div\");\r\n        let answerArray = Object.values(question.answers);\r\n\r\n        let correctAnswer = answerArray[findCorrectAnswerIndex(Object.values(question.correct_answers))];\r\n        let givenAnswer = answerArray[answers[index].selectedAnswer];\r\n\r\n        if (givenAnswer == undefined) givenAnswer = \"No answer selected\";\r\n\r\n        questionComparisonEl.classList.add(\"results__question\");\r\n        if (!answerCorrect) questionComparisonEl.classList.add(\"results__question--wrong\");\r\n\r\n        questionComparisonEl.innerHTML = `\r\n            <div class=\"results__question-info\">\r\n                <p>${trimString(question.question)}</p>\r\n                <div class=\"results__question-icon\">\r\n                    <img src=\"./src/images/icons/${answerCorrect ? `check` : `wrong`}.svg\" alt=\"checkmark\" />\r\n                </div>\r\n            </div> \r\n            <div class=\"results__answer-info\">\r\n                <div class=\"results__wrong-answer\">\r\n                    <p>Your answer</p>\r\n                    <p class=\"red\">${givenAnswer.replace(\"<\", \"&lt;\")}</p>\r\n                </div>\r\n                <div class=\"results__correct-answer\">\r\n                    <p>Correct answer</p>\r\n                    <p class=\"green\">${correctAnswer.replace(\"<\", \"&lt;\")}</p>\r\n                </div>\r\n            </div>\r\n        `;\r\n        CONSTS.questionComparisonList.appendChild(questionComparisonEl);\r\n    });\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// ------------------------------------------- //\r\n// sass entry point\r\nimport \"../sass/style.scss\";\r\n\r\n// module imports\r\nimport * as CONSTS from \"./constants\";\r\nimport * as GLOBALS from \"./globals\";\r\nimport { displayQuestion } from \"./renderQuestion\";\r\nimport { changeScreen } from \"./screenNav\";\r\nimport { fetchQuiz } from \"./fetchQuiz\";\r\nimport { generateQuizSettings } from \"./settings\";\r\nimport { initEvents } from \"./eventListeners\";\r\n// ------------------------------------------- //\r\n\r\nwindow.onload = () => {\r\n    GLOBALS.initSessionStorage();\r\n    GLOBALS.setQuizSettings(generateQuizSettings());\r\n    initEvents();\r\n};\r\n\r\n// Start event\r\nCONSTS.startBtn.addEventListener(\"click\", () => {\r\n    startNewQuiz();\r\n    changeScreen(CONSTS.questionScreen);\r\n});\r\n\r\n// Quiz init\r\nconst startNewQuiz = async () => {\r\n    GLOBALS.setQuizSettings(generateQuizSettings());\r\n    GLOBALS.setQuizData(await fetchQuiz());\r\n    GLOBALS.createAnswerStorage(GLOBALS.getQuizData());\r\n    GLOBALS.setQuestionIndex(1);\r\n    displayQuestion(GLOBALS.getQuizData());\r\n};\r\n"],"names":["CONSTS","getScoreGrade","progress","initCircleGraph","score","currentProgress","progressEndValue","speed","progressInterval","setInterval","progressValue","innerText","graphProgress","style","background","clearInterval","startScreen","document","querySelector","questionScreen","settingsScreen","highscores","resultScreen","pages","startBtn","getElementById","quitBtn","settingsBtn","backBtns","querySelectorAll","highscoresBtn","amountOfQuestions","possibleAnswers","tipsAllowed","timelimitActivated","difficultyBtns","tagSearchbar","tagResults","selectedTags","tags","applySettingsBtn","resetSettingsBtn","settingsError","submitQuizBtn","questionComparisonList","resultElements","prevPageBtn","nextPageBtn","questionPhrase","answerList","questionNav","GLOBALS","submitQuiz","changeScreen","updateCounter","updateToggle","updateDifficulty","maxAmountOfQuestions","maxPossibleAnswers","generateQuizSettings","resetQuizSettings","updateTagResults","updateSelectedTags","testQuizSettings","displayQuestion","highlightSelectedAnswer","initEvents","map","btn","addEventListener","window","close","e","display","setQuizSettings","getAnswerStorage","getQuizData","getQuestionIndex","getQuizSettings","setQuestionIndex","fetchQuiz","url","URL","params","apiKey","limit","difficulty","search","URLSearchParams","toString","fetch","res","status","json","data","Error","undefined","initSessionStorage","sessionStorage","getItem","setItem","setQuizData","JSON","stringify","parse","createAnswerStorage","answerStorageBase","answer","index","selectedAnswer","correctAnswer","setAnswerStorage","updateAnswerStorage","questionIndex","answerStorageCurrent","setQuizScore","getQuizScore","Number","compareAnswer","answerEntry","trimString","text","length","substring","findCorrectAnswerIndex","answers","correctIndex","selectedIndex","children","el","classList","add","remove","renderQuestionNavigation","questions","innerHTML","question","questionNumberEl","createElement","target","slice","appendChild","currentQuestion","currentQuestionAnswers","Object","values","correct_answers","answerEl","replace","destinationScreen","page","tipsOn","timelimitOn","resetDifficulty","checkCounterValue","currentValue","maxValue","event","counterMax","settingValue","parentElement","settingBtn","getAttribute","toggleValue","targetBtn","searchValue","value","isResult","tag","toLowerCase","includes","tagResultEl","addTag","selectedTagEl","selectedTagsElArray","removeChild","scoreToPercentage","Math","round","resultType","resultValue","answerCorrect","questionComparisonEl","answerArray","givenAnswer","onload","startNewQuiz"],"sourceRoot":""}